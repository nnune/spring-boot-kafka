spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          # Either keyUri or keyValue should be populated. This is the public key for verifying the jwt token.
          # keyUri is preferred and should be a url exposed by uaa .
          #jwk-set-uri: http://localhost:8080/key
          public-key-location: classpath:certificate_publickey.pem
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
        show-sql: true
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=sample-schema&ApplicationName=sample-app
    username: postgres
    password: postgres
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      #bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      auto-offset-reset: earliest
      group-id: ipm-migrater
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: RECORD
flyway:
  url: jdbc:postgresql://localhost:5432/postgres
  schemas: sample-schema
  user: postgres
  password: postgres